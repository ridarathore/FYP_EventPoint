@page "/areas/{Id}"

@inject NavigationManager n
@using ClassLibraryDAL
@using ClassLibraryEntity
<EditForm Model="ModelArea" OnSubmit="SaveArea">
    <InputText @bind-Value="ModelArea.areaid" Disabled></InputText>
    <InputText @bind-Value="ModelArea.area" required></InputText>
    <button type="submit" class="btn btn-outline-success">@Buttonname</button>
</EditForm>
<br /><br /><br />
<table class="table table-secondary table-striped table-bordered text-center">
        <thead class="thead-dark">
            <tr>
                <th> Area ID </th>
                <th> Area </th>
                <th>Actions</th>
            </tr>
        </thead>
        @foreach (var ar in AreaList)
        {
            <tr>
                <td>@ar.areaid</td>
                <td>@ar.area</td>
                <td>       
                  <button  class="btn btn-outline-primary" @onclick="(e=>EditArea(ar.area,ar.areaid))">Edit Area</button>
                   <button class="btn btn-outline-danger" @onclick ="(e => OnDelete(ar.areaid))" >Delete Area</button>
                </td>
            </tr>
        }
</table>


@code {
    [Parameter] public string Id{ get; set; }
    private List<AreaEntity> AreaList{ get; set; }
    private AreaEntity? ModelArea{ get; set; }
    private string? Buttonname{ get; set; }

    protected override void OnInitialized()
    {
        ModelArea = new AreaEntity();
        Onload();
    }
    protected void Onload()
    {
        Buttonname = "Save";
        this.AreaList = ClassLibraryDAL.AreaDAL.GetArea(int.Parse(Id));
    }
    public void OnDelete(string Id)
    {
        ClassLibraryDAL.AreaDAL.DeleteArea(Id);
        Onload();
    }
    private void SaveArea()
    {
        if (Buttonname == "Save")
        {
            ModelArea.cityid = Id.ToString();
            AreaDAL.SaveArea(ModelArea);
             ModelArea = new AreaEntity();
            Onload();
        }
        else
        {
            ModelArea.cityid = Id.ToString();
            AreaDAL.UpdateArea(ModelArea);
            ModelArea = new AreaEntity();
            Onload();
        }
    }
    private void EditArea(string area,string arid)
    {
        Buttonname = "Update";
        ModelArea.area = area;
        ModelArea.areaid = arid;
    }
    //private void SubmitForm(){
    //    if (Id == "0")
    //    {
    //        ClassLibraryDAL.AreaDAL.SaveArea(ModelArea,int.Parse(Id));
    //        //n.NavigateTo("/areas/{cityid}");
    //    }
    //    else
    //    {
    //        ClassLibraryDAL.AreaDAL.UpdateArea(ModelArea, int.Parse(Id));
    //        //n.NavigateTo("/areas/{cityid}");
    //    }
    //}
}

