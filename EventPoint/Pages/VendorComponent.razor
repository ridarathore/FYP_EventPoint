@page "/vendors"
@using ClassLibraryEntity
@using ClassLibraryDAL
@inject NavigationManager n
@using EventPoint.Shared;

<h1>Manage Vendors</h1>

<div style="display: flex; flex-direction:row" class="dropdown">

    <select @bind="@CityId" class="form-select" style="width:20%" required>
        <option value="-1">Select City</option>
        @foreach (var c in CityList)
        {
            <option value="@c.cityid">@c.cityname</option>
        }
    </select>

    <select @bind="@CategoryId" class="form-select" style="width:20%" required>
        <option value="-1">Select Category</option>
        @foreach (var c in CategoryList)
        {
            <option value="@c.categoryid">@c.categoryname</option>
        }
    </select>

    <select @bind="@StatusCheck" class="form-select" style="width:20%" required>
        <option value="-1">Select Status</option>
        <option value="1">Activated</option>
        <option value="0">Deactivated</option>
    </select>

    <button class="btn btn-primary" style="width:15%" type="submit" @onclick="FilterData">Search</button>
</div>
<br />
<br />
@if (VendorList != null)
{

    <table class="table table-secondary table-striped table-bordered text-center text-sm">
        <thead>
            <tr>
                <td>Vendor ID</td>
                <td>Bussiness Name</td>
                <td>Owner Name</td>
                <td>Phone Number ID</td>
                <td>Email</td>
                <td>City</td>
                <td>Category</td>
                <td>Status</td>
                <td>Action</td>
            </tr>
        </thead>

        @foreach (var vendor in VendorList)
        {
            <tr>
                <td>@vendor.ven_id</td>
                <td>@vendor.businessname</td>
                <td>@vendor.ownername</td>
                <td>@vendor.phoneno</td>
                <td>@vendor.email</td>
                <td>@vendor.City</td>
                <td>@vendor.Cat_Id</td>
                <td>@vendor.status</td>
                <td>
                    <button class="btn btn-secondary" @onclick="(e => UpdateStatus(vendor.ven_id))">@buttonName</button>
                   @* @if (@vendor.status == "True")
                    {
                        <button class="btn btn-danger" @onclick="(e => UpdateStatus(vendor.ven_id,0))">@buttonName</button>
                    }
                    else
                    {
                        <button class="btn btn-success" @onclick="(e => UpdateStatus(vendor.ven_id,1))">@buttonName</button>
                    }*@
                </td>
                <td>
@*                    <button class = "btn btn-outline-secondary"  @onclick="(e => OnClick(vendor.ven_id,vendor.status))"> @state</button>
*@                    <button class="btn btn-outline-danger" @onclick="(e => OnDelete(vendor.ven_id))">Delete</button>
                </td>
            </tr>
        }

    </table>
}
<ConfirmBox @ref="confirmBox" UserChoice="ConfirmDelete_Click"></ConfirmBox>


@code {
    public List<VendorEntity>? VendorList { get; set; }
    public List<CityEntity> CityList { get; set; }
    public List<CategoryEntity> CategoryList { get; set; }
    public VendorEntity ven { get; set; }
    public bool bit { get; set; }
    public string state { get; set; }
    public string? status { get; set; }
    public int s { get; set; }
    public string? CityId { get; set; }
    public string? CategoryId { get; set; }
    public string? StatusCheck { get; set; }
    private string? buttonName { get; set; }
    public string ven_id { get; set; }
    ConfirmBox confirmBox;

    public void Delete_Click(string value)
    {
        ven_id = value;
        confirmBox.Show("Are you sure you want to delete?");
    }
    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            OnDelete(ven_id);
        }
    }

    protected override void OnInitialized()
    {
        Onload();
    }
    protected void Onload()
    {
        CityList = ClassLibraryDAL.CityDAL.GetCities();
        CategoryList = ClassLibraryDAL.CategoryDAL.GetCategories();
        VendorList = null;
    }
    public void OnDelete(string id)
    {
        ClassLibraryDAL.VendorDAL.DeleteVendor(id);
        Onload();
    }
    public void FilterData()
    {
        VendorList = null;
        if (CityId != null && CategoryId != null && StatusCheck != null)
        {
            if (CityId != "-1" && CategoryId != "-1" && StatusCheck != "-1")
            {
                VendorList = ClassLibraryDAL.VendorDAL.GetFilteredVendor(CityId, CategoryId, StatusCheck);
                if(StatusCheck=="1"){ buttonName = "Deactivate"; }
                else { buttonName = "Activate"; }

            }
        }
        else
        {

        }

    }
    public void UpdateStatus(string ven_id)
    {

        if (buttonName == "Activate")
        {
            VendorDAL.ChangeStatus(ven_id, 1);
        }
        else 
        {
            VendorDAL.ChangeStatus(ven_id, 0);
        }
        FilterData();
        //ven = ClassLibraryDAL.VendorDAL.GetVendorById_V(ven_id);
    }
    //public void UpdateStatus(string ven_id, int status)
    //{

    //    if (status == 1)
    //    {
    //        VendorDAL.ChangeStatus(ven_id, 1);
    //    }
    //    else
    //    {
    //        VendorDAL.ChangeStatus(ven_id, 0);
    //    }
    //    FilterData();
    //    //ven = ClassLibraryDAL.VendorDAL.GetVendorById_V(ven_id);
    //}
}