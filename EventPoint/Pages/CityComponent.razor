@page "/cities"
@using ClassLibraryEntity
@using ClassLibraryDAL
@inject NavigationManager nm
@using EventPoint.Shared;

<h3>Manage Cities</h3>
<a class="btn btn-primary" href="/cities/edit/0">Add new City</a>
<br />
<br />
<ConfirmBox @ref="confirmBox" UserChoice="ConfirmDelete_Click"></ConfirmBox>
<table class="table table-secondary table-striped table-bordered text-center">
    <thead class="thead thead-dark ">
        <tr>
            <td>City ID</td>
            <td>City Name</td>
            <td>Ations</td>
        </tr>
    </thead>

    @foreach (var city in CityList)
    {
        <tr>
            <td>@city.cityid</td>
            <td>@city.cityname</td>
            <td>
                <a class="btn btn-outline-primary" href="/cities/edit/@city.cityid">Edit City</a>
                <button class="btn btn-outline-danger" @onclick="() => Delete_Click(city.cityid)">Delete City</button>
                <a class="btn btn-outline-secondary" href="areas/@city.cityid">Add City Area</a>
            </td>
        </tr>
    }
</table>

@code {
    public List<CityEntity> CityList { get; set; }
    public string city_id { get; set; }
    ConfirmBox confirmBox;

    public void Delete_Click(string value)
    {
        city_id = value;
        confirmBox.Show("Are you sure you want to delete?");
    }
    protected async Task ConfirmDelete_Click(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            OnDelete(city_id);
        }
    }

    protected override void OnInitialized()
    {
        OnLoad();
    }

    protected void OnLoad()
    {
        this.CityList = ClassLibraryDAL.CityDAL.GetCities();
    }
    public void OnDelete(string Id)
    {
        ClassLibraryDAL.CityDAL.DeleteCity(Id);
        OnLoad();
    }
}